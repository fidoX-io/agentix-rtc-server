# AgentIX RTC Server - Custom Release Workflow
# This workflow is separate from LiveKit's original workflows
# Publishes to GitHub Container Registry (ghcr.io) for AgentIX distribution

name: AgentIX Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      push_latest:
        description: 'Also tag as latest'
        required: false
        default: true
        type: boolean
  push:
    branches:
      - master
    paths:
      - 'pkg/**'
      - 'cmd/**'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For manual dispatch with version
            type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event.inputs.push_latest == 'true' && github.event_name == 'workflow_dispatch' }}
            # For automatic builds on master
            type=ref,event=branch,enable=${{ github.event_name == 'push' }}
            type=sha,prefix={{branch}}-,enable=${{ github.event_name == 'push' }}
            type=raw,value=dev-latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
          labels: |
            org.opencontainers.image.title=AgentIX RTC Server
            org.opencontainers.image.description=AI-Enhanced Real-Time Communication Server based on LiveKit
            org.opencontainers.image.vendor=FidoX.io
            org.opencontainers.image.url=https://github.com/fidoX-io/agentix-rtc-server
            org.opencontainers.image.source=https://github.com/fidoX-io/agentix-rtc-server
            org.opencontainers.image.licenses=Apache-2.0

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release Summary
        run: |
          echo "## ðŸš€ AgentIX RTC Server Release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Images Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Images:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull the image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Run the server" >> $GITHUB_STEP_SUMMARY
          echo "docker run -p 7880:7880 -p 7881:7881 \\" >> $GITHUB_STEP_SUMMARY
          echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  update-documentation:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README with latest release
        run: |
          VERSION="${{ github.event.inputs.version }}"
          sed -i "s|ghcr.io/fidox-io/agentix-rtc-server:.*|ghcr.io/fidox-io/agentix-rtc-server:${VERSION}|g" README.md || true
          
          # Check if changes were made
          if git diff --quiet README.md; then
            echo "No changes needed in README.md"
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "docs: update Docker image version to ${VERSION}"
            git push
          fi