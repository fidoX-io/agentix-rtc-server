# AgentIX RTC Server - Simple Docker Build
# Builds multi-arch Docker images and publishes to GitHub Container Registry
# Separate from LiveKit workflows - no conflicts with upstream

name: AgentIX Docker Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag (e.g., v1.0.0, latest, dev)'
        required: true
        default: 'dev'
        type: string
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fidox-io/agentix-rtc-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Download Go modules
        run: go mod download

      - name: Generate code
        uses: magefile/mage-action@v3
        with:
          version: latest
          args: generate

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Manual dispatch with custom tag
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
            # Auto builds on main branch
            type=ref,event=branch,enable=${{ github.event_name == 'push' }}
            type=sha,prefix=dev-,enable=${{ github.event_name == 'push' }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.title=AgentIX RTC Server
            org.opencontainers.image.description=AI-Enhanced WebRTC Server with Noise Filtering
            org.opencontainers.image.vendor=Agentixhub.ai
            org.opencontainers.image.source=https://github.com/fidox-io/agentix-rtc-server

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "## ðŸš€ AgentIX Docker Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Usage:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev" >> $GITHUB_STEP_SUMMARY
          echo "docker run -p 7880:7880 -p 7881:7881 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY